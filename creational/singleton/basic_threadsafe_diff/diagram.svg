<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1117px" preserveAspectRatio="none" style="width:1335px;height:1117px;" version="1.1" viewBox="0 0 1335 1117" width="1335px" zoomAndPan="magnify"><defs/><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="549" x="399.5" y="19.2419">Singleton Pattern - Thread-Unsafe vs Thread-Safe Karşılaştırması</text><!--MD5=[5a8a4c2e5091be3ed7b93fb0a79c5ff6]
cluster ❌ Basit Lazy Singleton (Thread-Unsafe)--><polygon fill="#FFE8CC" points="631.5,127.5158,906.9375,127.5158,913.9375,152.5838,985.5,152.5838,985.5,1067.5158,631.5,1067.5158,631.5,127.5158" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="631.5" x2="913.9375" y1="152.5838" y2="152.5838"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="269.4375" x="635.5" y="144.4818">❌ Basit Lazy Singleton (Thread-Unsafe)</text><!--MD5=[fb4e5f2a0f948310f100420bb8da5d8e]
cluster ✅ Meyers Singleton (Thread-Safe)--><polygon fill="#E8F4F8" points="1009.5,135.0158,1247.9375,135.0158,1254.9375,160.0838,1313.5,160.0838,1313.5,1032.0158,1009.5,1032.0158,1009.5,135.0158" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1009.5" x2="1254.9375" y1="160.0838" y2="160.0838"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="232.4375" x="1013.5" y="151.9818">✅ Meyers Singleton (Thread-Safe)</text><!--MD5=[8149bdda0aaca12672b2907dc35119b9]
class L1--><rect fill="#FEFECE" height="186.5433" id="L1" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="705.5" y="165.5158"/><ellipse cx="775.25" cy="186.86" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M778.2188,192.5006 Q777.6406,192.7975 777,192.9381 Q776.3594,193.0943 775.6563,193.0943 Q773.1563,193.0943 771.8281,191.4537 Q770.5156,189.7975 770.5156,186.6725 Q770.5156,183.5475 771.8281,181.8912 Q773.1563,180.235 775.6563,180.235 Q776.3594,180.235 777,180.3912 Q777.6563,180.5475 778.2188,180.8443 L778.2188,183.5631 Q777.5938,182.985 777,182.7193 Q776.4063,182.4381 775.7813,182.4381 Q774.4375,182.4381 773.75,183.5162 Q773.0625,184.5787 773.0625,186.6725 Q773.0625,188.7662 773.75,189.8443 Q774.4375,190.9068 775.7813,190.9068 Q776.4063,190.9068 777,190.6412 Q777.5938,190.36 778.2188,189.7818 L778.2188,192.5006 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="793.75" y="183.3439">«Singleton»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="805.25" y="199.6881">Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="706.5" x2="910.5" y1="208.2041" y2="208.2041"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="713.5" y="216.2041"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="157" x="725.5" y="223.963">instance: unique_ptr&lt;Logger&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="713.5" y="231.186"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="725.5" y="238.9449">prefix: string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="706.5" x2="910.5" y1="246.1679" y2="246.1679"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="713.5" y="254.1679"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="725.5" y="261.9268">Logger()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="713.5" y="269.1497"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="725.5" y="276.9087">Logger(const Logger&amp;) = delete</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="713.5" y="284.1316"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="725.5" y="291.8905">operator=(const Logger&amp;) = delete</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="706.5" x2="910.5" y1="299.1135" y2="299.1135"/><ellipse cx="716.5" cy="310.1135" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="117" x="725.5" y="314.8724">getInstance(): Logger*</text><ellipse cx="716.5" cy="325.0954" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="725.5" y="329.8543">setPrefix(p: string): void</text><ellipse cx="716.5" cy="340.0773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="725.5" y="344.8362">log(msg: string): void</text><path d="M648,545.5158 L648,1051.2843 A0,0 0 0 0 648,1051.2843 L969,1051.2843 A0,0 0 0 0 969,1051.2843 L969,555.5158 L959,545.5158 L812.5,545.5158 L808.5,352.7258 L804.5,545.5158 L648,545.5158 A0,0 0 0 0 648,545.5158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M959,545.5158 L959,555.5158 L969,555.5158 L959,545.5158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="116" x="654" y="564.4129">Implementasyon:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="654" y="582.1189">```cpp</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="267" x="654" y="599.8249">static unique_ptr&lt;Logger&gt; instance = nullptr;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="657" y="617.5309"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="140" x="654" y="635.2369">Logger* getInstance() {</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="206" x="666" y="652.9429">if (!instance) {  // ⚠️ Race condition!</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="276" x="678" y="670.649">instance = unique_ptr&lt;Logger&gt;(new Logger());</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="5" x="666" y="688.355">}</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="125" x="666" y="706.061">return instance.get();</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="5" x="654" y="723.767">}</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="12" x="654" y="741.473">```</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="657" y="759.179"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="109" x="654" y="776.8851">Karakteristikler:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="174" x="654" y="794.5911">• Pointer döndürür (Logger*)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="133" x="654" y="812.2971">• Manuel null kontrolü</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="654" y="830.0031">• Heap allocation</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="143" x="654" y="847.7091">• unique_ptr ile yönetim</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="657" y="865.4151"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="10" x="654" y="883.1212">❌</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="77" x="667" y="883.1212">Problemler:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="216" x="654" y="900.8272">• Thread 1 ve 2 aynı anda if'e girebilir</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="132" x="654" y="918.5332">• İki instance oluşabilir</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="116" x="654" y="936.2392">• Bellek sızıntısı riski</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="169" x="654" y="953.9452">• Singleton garantisi bozulur</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="657" y="971.6512"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="101" x="654" y="989.3573">Kullanım Alanı:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="150" x="654" y="1007.0633">• Tek thread uygulamalar</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="654" y="1024.7693">• Basit scriptler</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="654" y="1042.4753">• Prototip geliştirme</text><!--MD5=[0b712d81357f6a2648075bf8a93dcbac]
class L2--><rect fill="#FEFECE" height="171.5614" id="L2" style="stroke: #A80036; stroke-width: 1.5;" width="235" x="1044" y="173.0158"/><ellipse cx="1125.25" cy="194.36" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1128.2188,200.0006 Q1127.6406,200.2975 1127,200.4381 Q1126.3594,200.5943 1125.6563,200.5943 Q1123.1563,200.5943 1121.8281,198.9537 Q1120.5156,197.2975 1120.5156,194.1725 Q1120.5156,191.0475 1121.8281,189.3912 Q1123.1563,187.735 1125.6563,187.735 Q1126.3594,187.735 1127,187.8912 Q1127.6563,188.0475 1128.2188,188.3443 L1128.2188,191.0631 Q1127.5938,190.485 1127,190.2193 Q1126.4063,189.9381 1125.7813,189.9381 Q1124.4375,189.9381 1123.75,191.0162 Q1123.0625,192.0787 1123.0625,194.1725 Q1123.0625,196.2662 1123.75,197.3443 Q1124.4375,198.4068 1125.7813,198.4068 Q1126.4063,198.4068 1127,198.1412 Q1127.5938,197.86 1128.2188,197.2818 L1128.2188,200.0006 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="62" x="1146.75" y="190.8439">«Singleton»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="1145.75" y="207.1881">SafeLogger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1045" x2="1278" y1="215.7041" y2="215.7041"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1052" y="223.7041"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1064" y="231.463">prefix: string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1045" x2="1278" y1="238.686" y2="238.686"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1052" y="246.686"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1064" y="254.4449">SafeLogger()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1052" y="261.6679"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="1064" y="269.4268">SafeLogger(const SafeLogger&amp;) = delete</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1052" y="276.6497"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1064" y="284.4087">operator=(const SafeLogger&amp;) = delete</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1045" x2="1278" y1="291.6316" y2="291.6316"/><ellipse cx="1055" cy="302.6316" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="123" x="1064" y="307.3905">instance(): SafeLogger&amp;</text><ellipse cx="1055" cy="317.6135" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1064" y="322.3724">setPrefix(p: string): void</text><ellipse cx="1055" cy="332.5954" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="1064" y="337.3543">log(msg: string): void</text><path d="M1026,581.0158 L1026,1015.9602 A0,0 0 0 0 1026,1015.9602 L1297,1015.9602 A0,0 0 0 0 1297,1015.9602 L1297,591.0158 L1287,581.0158 L1165.5,581.0158 L1161.5,345.1858 L1157.5,581.0158 L1026,581.0158 A0,0 0 0 0 1026,581.0158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1287,581.0158 L1287,591.0158 L1297,591.0158 L1287,581.0158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="116" x="1032" y="599.9129">Implementasyon:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="1032" y="617.6189">```cpp</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="147" x="1032" y="635.3249">SafeLogger&amp; instance() {</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="238" x="1044" y="653.0309">static SafeLogger inst;  // ✅ Thread-safe!</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="66" x="1044" y="670.7369">return inst;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="5" x="1032" y="688.4429">}</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="12" x="1032" y="706.149">```</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="1035" y="723.855"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="109" x="1032" y="741.561">Karakteristikler:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="210" x="1032" y="759.267">• Referans döndürür (SafeLogger&amp;)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="139" x="1032" y="776.973">• Null kontrolü gereksiz</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="138" x="1032" y="794.679">• Stack/static allocation</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="118" x="1032" y="812.3851">• Otomatik yönetim</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="1035" y="830.0911"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="11" x="1032" y="847.7971">✅</text><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="72" x="1046" y="847.7971">Garantiler:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="1032" y="865.5031">• C++11 Magic Static</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="167" x="1032" y="883.2091">• Compiler senkronizasyonu</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="137" x="1032" y="900.9151">• Tek instance garantisi</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="124" x="1032" y="918.6212">• Otomatik yok etme</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="1035" y="936.3272"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="101" x="1032" y="954.0332">Kullanım Alanı:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="163" x="1032" y="971.7392">• Çoklu thread uygulamalar</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="1032" y="989.4452">• Production kod</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="133" x="1032" y="1007.1512">• Modern C++ projeleri</text><path d="M6,32.5158 L6,485.1663 L227,485.1663 L227,42.5158 L217,32.5158 L6,32.5158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M217,32.5158 L217,42.5158 L227,42.5158 L217,32.5158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="95" x="12" y="51.4129">Temel Farklar:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="15" y="69.1189"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="109" x="12" y="86.8249">1. Thread Safety:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="156" x="21" y="104.5309">Lazy: ❌ Race condition var</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="153" x="21" y="122.2369">Meyers: ✅ C++11+ garanti</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="15" y="139.9429"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="122" x="12" y="157.649">2. Bellek Yönetimi:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="140" x="21" y="175.355">Lazy: unique_ptr (heap)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="191" x="21" y="193.061">Meyers: static local (stack/static)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="15" y="210.767"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="87" x="12" y="228.473">3. Dönüş Tipi:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="138" x="21" y="246.179">Lazy: Logger* (pointer)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="188" x="21" y="263.8851">Meyers: SafeLogger&amp; (referans)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="15" y="281.5911"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="108" x="12" y="299.2971">4. Null Kontrolü:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="148" x="21" y="317.0031">Lazy: if (!instance) gerekli</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="100" x="21" y="334.7091">Meyers: Gereksiz</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="15" y="352.4151"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="95" x="12" y="370.1212">5. Performans:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="151" x="21" y="387.8272">Lazy: Pointer dereference</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="150" x="21" y="405.5332">Meyers: Doğrudan erişim</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="15" y="423.2392"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="128" x="12" y="440.9452">6. Kod Karmaşıklığı:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="120" x="21" y="458.6512">Lazy: Daha fazla kod</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="21" y="476.3573">Meyers: Daha basit</text><path d="M262,103.5158 L262,414.5181 L615,414.5181 L615,113.5158 L605,103.5158 L262,103.5158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M605,103.5158 L605,113.5158 L615,113.5158 L605,103.5158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="169" x="268" y="122.4129">Sequence Karşılaştırması:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="271" y="140.1189"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="206" x="268" y="157.8249">Lazy Singleton (Thread-Unsafe):</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="12" x="268" y="175.5309">```</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="317" x="268" y="193.2369">Thread 1: getInstance() → if(!instance) → new Logger()</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="332" x="268" y="210.9429">Thread 2: getInstance() → if(!instance) → new Logger() ⚠️</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="114" x="268" y="228.649">Sonuç: İki instance!</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="12" x="268" y="246.355">```</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="271" y="264.061"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="207" x="268" y="281.767">Meyers Singleton (Thread-Safe):</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="12" x="268" y="299.473">```</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="225" x="268" y="317.179">Thread 1: instance() → static init başlar</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="259" x="268" y="334.8851">Thread 2: instance() → bekler (compiler lock)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="149" x="268" y="352.5911">Thread 1: init tamamlanır</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="209" x="268" y="370.2971">Thread 2: mevcut instance döner ✅</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="268" y="388.0031">Sonuç: Tek instance!</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="12" x="268" y="405.7091">```</text><path d="M21,625.5158 L21,971.9302 L212,971.9302 L212,635.5158 L202,625.5158 L21,625.5158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M202,625.5158 L202,635.5158 L212,635.5158 L202,625.5158 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="59" x="27" y="644.4129">Öneriler:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="30" y="662.1189"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="144" x="27" y="679.8249">Lazy Singleton Kullan:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="115" x="27" y="697.5309">• Tek thread ortamı</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="86" x="27" y="715.2369">• Hızlı prototip</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="115" x="27" y="732.9429">• Basit uygulamalar</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="27" y="750.649">• Legacy kod (C++03)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="30" y="768.355"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="163" x="27" y="786.061">Meyers Singleton Kullan:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="128" x="27" y="803.767">• Çoklu thread ortamı</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="101" x="27" y="821.473">• Production kod</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="135" x="27" y="839.179">• Modern C++ (C++11+)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="93" x="27" y="856.8851">• Güvenlik kritik</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="122" x="27" y="874.5911">• Performans önemli</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="30" y="892.2971"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="93" x="27" y="910.0031">Genel Tavsiye:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="148" x="27" y="927.7091">Modern C++ projelerinde</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="170" x="27" y="945.4151">her zaman Meyers Singleton</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="77" x="27" y="963.1212">tercihi yapın!</text><!--MD5=[88eb9b64dfdea8a685b9c0e455f58bcd]
link DIFF to SEQ--><!--MD5=[ecdd3e97e5fde0fe0c0ea08ab15375f7]
link DIFF to REC--><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="363" x="492.5" y="1104.2058">Oluşturulma: 17.10.2025 | Sürüm: 1.0.0 | Karşılaştırma: Singleton Patterns</text><!--MD5=[14292d9bd748c781676d2e34a6f6fef6]
@startuml

title Singleton Pattern - Thread-Unsafe vs Thread-Safe Karşılaştırması

skinparam backgroundColor #FFFFFF
skinparam shadowing false

package "❌ Basit Lazy Singleton (Thread-Unsafe)" #FFE8CC {
    class "Logger" as L1 <<Singleton>> {
        - {static} instance: unique_ptr<Logger>
        - prefix: string
        __
        - Logger()
        - Logger(const Logger&) = delete
        - operator=(const Logger&) = delete
        __
        + {static} getInstance(): Logger*
        + setPrefix(p: string): void
        + log(msg: string): void
    }
    
    note bottom of L1
      **Implementasyon:**
      ```cpp
      static unique_ptr<Logger> instance = nullptr;
      
      Logger* getInstance() {
          if (!instance) {  // ⚠️ Race condition!
              instance = unique_ptr<Logger>(new Logger());
          }
          return instance.get();
      }
      ```
      
      **Karakteristikler:**
      • Pointer döndürür (Logger*)
      • Manuel null kontrolü
      • Heap allocation
      • unique_ptr ile yönetim
      
      ❌ **Problemler:**
      • Thread 1 ve 2 aynı anda if'e girebilir
      • İki instance oluşabilir
      • Bellek sızıntısı riski
      • Singleton garantisi bozulur
      
      **Kullanım Alanı:**
      • Tek thread uygulamalar
      • Basit scriptler
      • Prototip geliştirme
    end note
}

package "✅ Meyers Singleton (Thread-Safe)" #E8F4F8 {
    class "SafeLogger" as L2 <<Singleton>> {
        - prefix: string
        __
        - SafeLogger()
        - SafeLogger(const SafeLogger&) = delete
        - operator=(const SafeLogger&) = delete
        __
        + {static} instance(): SafeLogger&
        + setPrefix(p: string): void
        + log(msg: string): void
    }
    
    note bottom of L2
      **Implementasyon:**
      ```cpp
      SafeLogger& instance() {
          static SafeLogger inst;  // ✅ Thread-safe!
          return inst;
      }
      ```
      
      **Karakteristikler:**
      • Referans döndürür (SafeLogger&)
      • Null kontrolü gereksiz
      • Stack/static allocation
      • Otomatik yönetim
      
      ✅ **Garantiler:**
      • C++11 Magic Static
      • Compiler senkronizasyonu
      • Tek instance garantisi
      • Otomatik yok etme
      
      **Kullanım Alanı:**
      • Çoklu thread uygulamalar
      • Production kod
      • Modern C++ projeleri
    end note
}

note "**Temel Farklar:**\n\n**1. Thread Safety:**\n   Lazy: ❌ Race condition var\n   Meyers: ✅ C++11+ garanti\n\n**2. Bellek Yönetimi:**\n   Lazy: unique_ptr (heap)\n   Meyers: static local (stack/static)\n\n**3. Dönüş Tipi:**\n   Lazy: Logger* (pointer)\n   Meyers: SafeLogger& (referans)\n\n**4. Null Kontrolü:**\n   Lazy: if (!instance) gerekli\n   Meyers: Gereksiz\n\n**5. Performans:**\n   Lazy: Pointer dereference\n   Meyers: Doğrudan erişim\n\n**6. Kod Karmaşıklığı:**\n   Lazy: Daha fazla kod\n   Meyers: Daha basit" as DIFF

note "**Sequence Karşılaştırması:**\n\n**Lazy Singleton (Thread-Unsafe):**\n```\nThread 1: getInstance() → if(!instance) → new Logger()\nThread 2: getInstance() → if(!instance) → new Logger() ⚠️\nSonuç: İki instance!\n```\n\n**Meyers Singleton (Thread-Safe):**\n```\nThread 1: instance() → static init başlar\nThread 2: instance() → bekler (compiler lock)\nThread 1: init tamamlanır\nThread 2: mevcut instance döner ✅\nSonuç: Tek instance!\n```" as SEQ

note "**Öneriler:**\n\n**Lazy Singleton Kullan:**\n• Tek thread ortamı\n• Hızlı prototip\n• Basit uygulamalar\n• Legacy kod (C++03)\n\n**Meyers Singleton Kullan:**\n• Çoklu thread ortamı\n• Production kod\n• Modern C++ (C++11+)\n• Güvenlik kritik\n• Performans önemli\n\n**Genel Tavsiye:**\nModern C++ projelerinde\nher zaman Meyers Singleton\ntercihi yapın!" as REC

footer Oluşturulma: 17.10.2025 | Sürüm: 1.0.0 | Karşılaştırma: Singleton Patterns

@enduml

PlantUML version 1.2020.02(Sun Mar 01 13:22:07 TRT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 21.0.8+9-Ubuntu-0ubuntu124.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>