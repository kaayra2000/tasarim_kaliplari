@startuml factory-pattern-comparison
/'
 * @file factory-pattern-comparison.puml
 * @brief iki factory pattern implementasyonunun karşılaştırmalı analizi
 * @author Muhammed Kayra Bulut
 * @date 15.10.2025
 * @version 1.0.0
 * 
 * @description bu diyagram basit ve gelişmiş factory pattern
 *              implementasyonlarını yan yana karşılaştırır ve
 *              aralarındaki farkları vurgular
 '/

title Factory Pattern Karşılaştırması - Basit vs Gelişmiş

skinparam component {
    BackgroundColor #E8F4F8
    BorderColor #2C5F7C
}

skinparam note {
    BackgroundColor #FFF9E6
    BorderColor #CC8800
}

package "Basit Factory (Shape)" #FFEBEE {
    component [ShapeFactory] as SF
    component [Shape Interface] as SI
    component [Circle] as C1
    component [Rectangle] as R1
    component [Triangle] as T1
    
    SI <.. SF : creates
    SI <|-- C1
    SI <|-- R1
    SI <|-- T1
}

package "Gelişmiş Factory (Vehicle)" #E8F5E9 {
    component [VehicleFactory] as VF
    component [Vehicle Abstract] as VA
    component [VehicleType Enum] as VTE
    component [Car] as C2
    component [Motorcycle] as M2
    component [Truck] as T2
    
    VA <.. VF : creates
    VTE <-- VF : uses
    VA <|-- C2
    VA <|-- M2
    VA <|-- T2
}

note right of SF
  **Basit Yaklaşım**
  ✗ String tabanlı tür seçimi
  ✗ if-else zinciri
  ✗ Tür güvenliği yok
  ✓ Basit ve anlaşılır
  ✓ Hızlı prototürleme
end note

note right of VF
  **Gelişmiş Yaklaşım**
  ✓ Enum tabanlı tür güvenliği
  ✓ String alternatifi de var
  ✓ Çağdaş C++ standartları
end note

note as ComparisonTable
  **Özellik Karşılaştırması**
  ═══════════════════════════════════════════════════════
  | Özellik              | Basit Factory | Gelişmiş Factory |
  |═════════════════════|═══════════════|══════════════════|
  | Tür Güvenliği        | Zayıf         | Güçlü (enum)     |
  | Kod Karmaşıklığı     | Düşük         | Orta             |
  | Bakım Kolaylığı      | Orta          | Yüksek           |
  | Başarım              | İyi           | Çok İyi          |
  | Çağdaş C++ Uyumu     | Düşük         | Yüksek           |
  | Genişletilebilirlik  | Orta          | Yüksek           |
  ═══════════════════════════════════════════════════════
end note


note as BestPractices
  **Ne Zaman Hangisi Kullanılmalı?**
  
  **Basit Factory Tercih Edilir:**
  • Küçük, basit projeler
  • Hızlı prototipleme
  • Öğrenme amaçlı kodlar
  • Eski kod entegrasyonu
  
  **Gelişmiş Factory Tercih Edilir:**
  • Üretim (production) kodları
  • Büyük ölçekli projeler
  • Tür güvenliği önemli
  • Çağdaş C++ standartları gerekli
  • Takım çalışması
end note

ComparisonTable -[hidden]- BestPractices

footer Oluşturulma: 15.10.2025 | Sürüm: 1.0.0 | Analiz: Factory Pattern Comparison

@enduml
