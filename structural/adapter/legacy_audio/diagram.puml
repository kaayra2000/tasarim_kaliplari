@startuml legacy-audio-adapter
/'
 * @file legacy-audio-adapter.puml
 * @brief usb-c telefon çıkışının analog kulaklığa adapter pattern ile uyarlanması
 * @author Muhammed Kayra Bulut
 * @date 20.10.2025
 * @version 1.0.0
 * @pattern Adapter (Structural)
 * 
 * @description bu diyagram dijital ses çıkışı sağlayan bir
 *              telefonun, analog kulaklık arayüzüne nasıl
 *              uyarlandığını gösterir. adapter, pcm verisini
 *              dönüştürerek istemciye analog sinyal sunar.
 * 
 * @related AudioService.cpp, DacController.cpp
 '/

title USB-C'den 3.5mm Jak'a - Adapter Pattern

' Stil tanımlamaları
skinparam backgroundColor #FFFFFF
skinparam shadowing false
skinparam classAttributeIconSize 0

skinparam class {
    BackgroundColor #E8F4F8
    BorderColor #2C5F7C
    ArrowColor #2C5F7C
}

skinparam package {
    BackgroundColor #F0F8FF
    BorderColor #4682B4
}

' ========== Hedef Arayüz (Target Interface) ==========

package "Analog Ses Sistemi" {
    interface AnalogHeadset <<Target>> {
        +playAnalog(left: float, right: float): void
    }

    class StudioHeadphones <<Concrete Target>> {
        -impedance: int
        -sensitivity: float
        __
        +StudioHeadphones()
        +playAnalog(left: float, right: float): void
        +getImpedance(): int
    }
}

' ========== Adaptee (Uyarlanacak Sınıf) ==========

package "Modern Telefon" {
    class UsbTypeCPhone <<Adaptee>> {
        -dacCalibrated: boolean
        -sampleRate: int
        __
        +UsbTypeCPhone()
        +streamDigital(track: string): vector<int>
        +calibrateDac(): void
        +getSampleRate(): int
    }
}

' ========== Adapter Sınıfı ==========

class UsbToJackAdapter <<Adapter>> {
    -phone: unique_ptr<UsbTypeCPhone>
    -gainLeft: float
    -gainRight: float
    -bufferSize: int
    __
    +UsbToJackAdapter(phone: unique_ptr<UsbTypeCPhone>)
    +playAnalog(left: float, right: float): void
    +playFromPhone(track: string): void
    +setGain(left: float, right: float): void
    -convertToStereo(pcm: vector<int>): pair<float, float>
    -applyGain(signal: float, gain: float): float
}

' ========== İlişkiler ==========

AnalogHeadset <|.. StudioHeadphones : implements
AnalogHeadset <|.. UsbToJackAdapter : implements
UsbToJackAdapter *-- UsbTypeCPhone : owns >

' ========== Açıklayıcı Notlar ==========

note left of UsbToJackAdapter
  **Adaptasyon Adımları:**
  1. dijital pcm akışını al
  2. dac kalibrasyonu yap
  3. sol/sağ kanal kazancını ayarla
  4. analog sinyale dönüştür
  5. analogheadset arayüzünü besle
  
  **Teknik Detaylar:**
  * sample rate: 48kHz
  * bit depth: 16-bit
  * buffer: 512 samples
end note

note right of AnalogHeadset
  **Target Interface**
  
  analog arayüz eski sistemlerle
  uyumludur. adapter olmadan
  modern telefon dijital çıktıyı
  doğrudan iletemez.
  
  **Dikkat:** impedans uyumu
  kontrol edilmelidir
end note

note bottom of UsbTypeCPhone
  **Kullanım Örneği:**
  
  auto phone = std::make_unique<UsbTypeCPhone>();
  phone->calibrateDac();
  
  UsbToJackAdapter adapter(std::move(phone));
  adapter.setGain(0.8f, 0.8f);
  adapter.playFromPhone("analog-dreams.aac");
end note

note top of StudioHeadphones
  * impedans: 32Ω
  * hassasiyet: 98dB
  * frekans: 20Hz-20kHz
end note

' ========== Legend ==========

legend right
  |= Stereotype |= Açıklama |
  | <<Target>> | eski sistem arayüzü |
  | <<Adapter>> | dönüştürücü sınıf |
  | <<Adaptee>> | modern cihaz |
  | <<Concrete Target>> | hedef implementasyon |
  
  **Pattern Amacı:**
  uyumsuz arayüzleri birlikte
  çalışabilir hale getirmek
end legend

footer Oluşturulma: 20.10.2025 | Sürüm: 1.0.0 | Pattern: Adapter (Structural)

@enduml
