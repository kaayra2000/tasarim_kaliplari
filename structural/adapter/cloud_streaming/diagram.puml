@startuml cloud-streaming-adapter
/'
 * @file cloud-streaming-adapter.puml
 * @brief bulut tabanlı medya servisinin adapter pattern ile uyarlanması
 * @author Muhammed Kayra Bulut
 * @date 20.10.2025
 * @version 1.0.0
 *
 * @description bu diyagram yerel MediaPlayer arayüzünün
 *              üçüncü parti CloudStreamingService servisine
 *              nasıl uyarlandığını gösterir. Adapter sınıfı
 *              bağlantı, kimlik doğrulama ve yayın akışını
 *              istemciden gizler.
 *
 * @pattern Adapter (Structural)
 * @related MediaPlayer.h, CloudStreamingService.h, StreamingAdapter.cpp
'/

title Bulut Akışı - Adapter Pattern Class Diyagramı

' Stil tanımlamaları
skinparam backgroundColor #FFFFFF
skinparam shadowing false
skinparam classAttributeIconSize 0

skinparam class {
    BackgroundColor #E8F4F8
    BorderColor #2C5F7C
    ArrowColor #2C5F7C
    FontName Arial
    FontSize 12
}

skinparam package {
    BackgroundColor #F0F7FA
    BorderColor #2C5F7C
    FontStyle bold
}

skinparam note {
    BackgroundColor #FFF9E6
    BorderColor #CC8800
}

' ========== Hedef Arayüz ve Yerel Uygulama ==========

package "Yerel Oynatıcı Katmanı" {
    interface MediaPlayer <<Target>> {
        +play(resource: String): void
        __
    }

    class LocalAudioPlayer <<Concrete Target>> {
        -volume: int
        -isPlaying: boolean
        __
        +LocalAudioPlayer()
        +play(resource: String): void
        +stop(): void
        +setVolume(level: int): void
    }
}

' ========== Adaptee Servis ==========

package "Bulut Servisi Katmanı" #F7F1FF {
    class CloudStreamingService <<Adaptee>> {
        -connectionStatus: boolean
        -currentRegion: String
        -isAuthenticated: boolean
        __
        +CloudStreamingService()
        +connect(region: String): boolean
        +authenticate(token: String): boolean
        +startStream(trackId: String): void
        +stopStream(): void
        +getStreamStatus(): String
    }
}

' ========== Adapter Sınıfı ==========

class StreamingAdapter <<Adapter>> {
    -service: unique_ptr<CloudStreamingService>
    -regionEndpoint: String
    -authToken: String
    -isConnected: boolean
    __
    +StreamingAdapter(region: String, token: String)
    +~StreamingAdapter()
    +play(resource: String): void
    -prepareStream(resource: String): void
    -ensureConnection(): boolean
    -parseResourceId(resource: String): String
}

' ========== İlişkiler ==========

MediaPlayer <|.. LocalAudioPlayer : implements
MediaPlayer <|.. StreamingAdapter : implements
StreamingAdapter o-- CloudStreamingService : uses >

note right of MediaPlayer
  **Target Interface**
  * istemcinin beklediği standart arayüz
  * tüm oynatıcılar bu arayüzü uygular
  * basit ve tutarlı API sağlar
end note

note left of StreamingAdapter
  **Adapter Sorumlulukları**
  1. Bağlantı yönetimi
  2. Kimlik doğrulama
  3. Kaynak ID çevirimi
  4. Hata yönetimi
  5. İstemci arayüzünü koruma
  
  **Örnek Kullanım:**
  auto player = make_unique<StreamingAdapter>(
      "eu-central-1", 
      "token-42"
  );
  player->play("lofi-beats.mp3");
end note

note right of CloudStreamingService
  **Adaptee Özellikleri**
  * Bölgesel uç noktalar
  * Token bazlı auth
  * Karmaşık API
  * Farklı metot isimleri
  
  **Desteklenen Bölgeler:**
  - eu-central-1
  - us-east-1
  - ap-southeast-1
end note

note bottom of LocalAudioPlayer
  **Yerel Oynatıcı**
  * Dosya sisteminden oynatır
  * Adapter pattern gerektirmez
  * Basit implementasyon
end note

legend right
  |= Stereotype |= Açıklama |
  | <<Target>> | İstemcinin beklediği arayüz |
  | <<Adapter>> | Çevirim yapan sınıf |
  | <<Adaptee>> | Uyum sağlanacak mevcut sınıf |
  | <<Concrete Target>> | Target'ın doğrudan implementasyonu |
  
  **İlişki Türleri:**
  <|.. : Interface implementation
  o-- : Composition (has-a)
endlegend

footer Oluşturulma: 20.10.2025 | Sürüm: 1.0.0 | Pattern: Adapter (Structural) | Modül: MediaPlayer

@enduml
